#!/Users/Stomp/.rvm/rubies/ruby-2.0.0-p195/bin/ruby
require File.join(File.dirname(__FILE__),'../../lib/setup')

@max_v, @min_v = 4.0 , -4.0
@n_particles = 2
@n_iterations = 200
@factor = 0.3
@nrp = NRP.new :path => @nrp_test_path << 'article_example.txt', :ratio => @factor
@pso_name = 'nrp1_0_3'
@result_file = File.open("#{@pso_name}.txt",'w')

20.times{
  run_time = time {
    attrs = {:n_particles => @n_particles,
            :n_dimensions => @nrp.customers.size,
            :max_velocity => @max_v,
            :min_velocity => @min_v,
            :name => @pso_name,
            :iteration => 0
            }
    options = {:fitness => @nrp.method(:fitness)}
    n_iterations_left = @n_iterations 
    if PSOBinary.count != 0
      @pso = PSOBinary.find_by(name: @pso_name)
      @pso.fitness = @nrp.method(:fitness)
      n_iterations_left -= @pso[:iteration]
      sleep 2 #Preciso disso pois em algumas execuções o banco não retornou o resultado rápido o suficiente
    else
      @pso = PSOBinary.create!(attrs, options)
    end
    n_iterations_left.times do |i|
      @pso.explore!
    end

    @result_file.puts "----------------------------------------------------------------"
    @result_file.puts " nrp1 factor #{@factor}"
    @result_file.puts " pso vmax = #{@max_v}"
    @result_file.puts " best = #{@pso.g_best.value}"
    PSO.delete_all
  }
  @result_file.puts " run time = #{run_time}"
  @result_file.puts "----------------------------------------------------------------"

  @pso.g_best.value
}

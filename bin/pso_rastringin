#!/Users/Stomp/.rvm/rubies/ruby-2.0.0-p195/bin/ruby
require File.join(File.dirname(__FILE__),'../lib/pso')
require File.join(File.dirname(__FILE__),'../lib/pso_type1')

sphere_proc = Proc.new do |position|
  sphere_return = 0
  position.each do |position_i|
    value = (position_i ** 2) - 10*Math.cos(2*Math::PI*position_i) + 10
    sphere_return += value
  end
  next sphere_return
end

@dimensions = 30

Particle.min_position = -5.12
Particle.max_position = 5.12

Particle.max_velocity = 2.0
Particle.min_velocity = -2.0

best_of_test = nil

#20.times do 
#end

@pso = PSO.new(20,@dimensions,sphere_proc)
2000.times do
  @pso.explore!
end
if best_of_test.nil? or @pso.g_best.value < best_of_test.value
  best_of_test = @pso.g_best.clone
end
puts "g best value = #{best_of_test.value}"
puts "g best position = #{best_of_test.position}"
